import random

suits = ('Hearts','Spades','Diamonds','Clubs')
ranks = ('Two','Three','Four','Five','Six','Seven','Eight','Nine','Ten','Jack','Queen','King','Ace')
values = {'Two':2,'Three':3,'Four':4,'Five':5,'Six':6,'Seven':7,'Eight':8,'Nine':9,'Ten':10,'Jack':10,'Queen':10,'King':10,'Ace':11}

playing = True

class Card:
    
    def __init__(self,suits,ranks):
        self.suits = suits
        self.ranks = ranks
        
    def __str__(self):
        return self.suits + " of " + self.ranks
        
class Deck:
    
    def __init__(self):
        self.deck = []
        for suit in suits:
            for rank in ranks:
                self.deck.append(Card(suit,rank))
                
    def __str__(self):
        deck_comp =''
        for card in self.deck:
            deck_comp += "\n "+ card.__str__()
        return 'The deck has: ' + deck_comp
    
    def shuffle(self):
        random.shuffle(self.deck)
        
    def deal(self):
        return self.deck.pop()        

class Hand:
    
    def __init__(self):
        self.card = []
        self.value = 0
        self.aces = 0
    
    def add_card(self,card):
        self.card.append(card)
        self.value += values[card.ranks]
        if card.ranks == 'Ace':
            self.aces += 1
    
    def adjust_for_ace(self):
        while self.value > 21 and self.aces:
            self.value -= 10
            self.aces -= 1
        
class Chips:
    
    def __init__(self):
        self.total = 100
        self.bet = 0
        
    def win_bet(self):
        self.total += self.bet
        
    def lose_bet(self):
        self.total -= self.bet       
        
def take_bet(chips):
    
    while True:
        try:
            chips.bet = int(input('How many chips would you like to bet? '))
        except ValueError:
            print('Sorry, a bet must be an integer!')
        else:
            if chips.bet > chips.total:
                print("Sorry, your bet can't exceed",chips.total)
            else:
                break     
                
def hit(deck,hand):
    hand.add_card(deck.deal())
    hand.adjust_for_ace()
    
def hit_or_stand(deck,hand):
    global playing
    
    while True:
        x = input("would you like to hit or stand? Enter H or S")
    
        if x[0].lower() == "h":
            hit(deck,hand)

        elif x[0].lower() == "s":
            print ("Player stands. Dealer is playing.")
            playing = False

        else:
            print("Sorry, please try again!")
            continue
        break    
        
def show_some(player,dealer):
    print ("\nDealer's Hand:")
    print("<card hidden>")
    print('',dealer.card[1])
    print("\nPlayer's Hand:", *player.card,sep="\n ")
    
def show_all(player,dealer):
    print("\nDealer's Hand:", *dealer.card, sep="\n ")
    print("Dealer's Hand= ", dealer.value)
    print("\nPlayer's Hand:", *player.card, sep="\n ")
    print("Player's Hand =", player.value)     
    
def player_busts(player,dealer,chips):
    print ("Player busts!")
    chips.lose_bet()
    
def player_wins(player,dealer,chips):
    print("Player wins!")
    chips.win_bet()
    
def dealer_busts(player,dealer,chips):
    print ("Dealer busts!")
    chips.win_bet()

def dealer_wins(player,dealer,chips):
    print("Dealer wins!")
    chips.lose_bet()
    
def push(player,dealer):
    print("Dealer and Player tie! It's a push.")    
    
while True:
    print("Welcome to Black Jack! Get as close to 21 as you can without going over!\n\
    Dealer hits until she reaches 17. Aces count as 1 or 11.")
    
    deck = Deck()
    deck.shuffle()
    
    players_hand = Hand()
    players_hand.add_card(deck.deal())
    players_hand.add_card(deck.deal())
    
    dealers_hand = Hand()
    dealers_hand.add_card(deck.deal())
    dealers_hand.add_card(deck.deal())
    
    players_chips = Chips()
    
    players_bet = take_bet(players_chips)
    
    show_some(players_hand,dealers_hand)
    
    while playing:
        hit_or_stand(deck,players_hand)
        
        show_some(players_hand,dealers_hand)
        
        if players_hand.value > 21:
            player_busts(players_hand,dealers_hand,players_chips)
            break
            
    if players_hand.value <= 21:
        while dealers_hand.value < 17:
            hit(deck,dealers_hand)
            
        show_all(players_hand,dealers_hand)
        
        if dealers_hand.value > 21:
            dealer_busts(players_hand,dealers_hand,players_chips)
        
        elif dealers_hand.value > players_hand.value:
            dealer_wins(players_hand,dealers_hand,players_chips)
            
        elif dealers_hand.value < players_hand.value:
            player_wins(players_hand,dealers_hand,players_chips)
            
        else:
            push(players_hand,dealers_hand)
            
    print("\nPlayer's winnings stand at",players_chips.total)
    
    new_game = input("Would you like to play another hand? Y or N?")
    
    if new_game[0].lower() == 'y':
        playing = True
        continue
        
    else:
        print("Thanks for Playing!")
        break  
